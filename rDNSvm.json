{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmName": {
        "type": "string",
        "defaultValue": null,
        "metadata": {
          "description": "Name of the VM"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "metadata": {
          "description": "Size of the VM"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "2019-Datacenter-core",
  
        "metadata": {
          "description": "Image SKU"
        }
      },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password"
        }
      },
      "moduleFilePath": {
        "type": "string",
        "metadata": {
          "description": "Relative path for the DSC configuration module."
        },
        "defaultValue": "rDNSserver.ps1.zip"
      },
      "configurationFunction": {
        "type": "string",
        "defaultValue": "rDNSserver.ps1\\DNSserver",
        "metadata": {
          "description": "DSC configuration function to call"
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "virtualNetworkName": "",
      "vnetAddressPrefix": "10.0.0.0/16",
      "subnet1Name": "",
      "subnet1Prefix": "10.0.0.0/24",
      "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]",
      "storageAccountName": "rDNSvmSotrageacc",
      "sizeOfDiskInGB": "100",
      "dataDisk1VhdName": "datadisk1",
      "OSDiskName": "osdiskforwindowssimple",
      "vmStorageAccountContainerName": "vhds",
      "publicIPAddressType": "Dynamic",
      "publicIPAddressName": "dscPubIP",
      "nicName": "",
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "vmExtensionName": "dscExtension",
      "networkSecurityGroupName": "default-NSG",
      "ttl": "3600",
      "mx": "raitisIFvm.mail.protection.outlook.com"
    },
    "resources": [
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-05-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-80",
              "properties": {
                "priority": 1000,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "80",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            },
            {
              "name": "default-allow-443",
              "properties": {
                "priority": 1001,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "443",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            },
            {
              "name": "default-allow-3389",
              "properties": {
                "priority": 1002,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "3389",
                "protocol": "Tcp",
                "sourceAddressPrefix": "215.145.121.0/24",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vnetAddressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnet1Name')]",
              "properties": {
                "addressPrefix": "[variables('subnet1Prefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnet1Ref')]"
                }
              }
            }
          ]
        }
        
      },
            {
    "name": "PrivateDNS",
    "type": "Microsoft.Network/privateDnsZones",
    "apiVersion": "2018-09-01",
    "properties": {
        "ttl": "[variables('ttl')]",
        "mxRecords": [
        {
        "preference": "1",
        "location": "[parameters('location')]",
        "exchange": "[variables('mx')]"
        }
        ],
        "txtRecords": [
        {
            "value": [
            "v=spf1 include:spf.protection.outlook.com -all"
            ]
        }
        ]
        }

      },
      {
        "apiVersion": "2019-07-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[parameters('vmName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
           "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(parameters('vmName'), '_OSDisk')]",
              "vhd": {
                "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            
            },
               "dataDisks": [
              {
                "name": "datadisk1",
                "diskSizeGB": "[variables('sizeOfDiskInGB')]",
                "lun": 0,
                "vhd": {
                  "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('dataDisk1VhdName'),'.vhd')]"
                },
                "createOption": "Empty"
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmName'),'/', variables('vmExtensionName'))]",
        "apiVersion": "2020-12-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.19",
          "autoUpgradeMinorVersion": true,
          "protectedSettings": {
    "configurationArguments": {
        "parameterOfTypePSCredential1": {
            "userName": "",
            "password": ""
        }
    },
    "configurationUrlSasToken": "",
    "configurationDataUrlSasToken": ""
},
          "settings": {
            "ModulesUrl": "[uri(parameters('_artifactsLocation'), concat(parameters('moduleFilePath'), parameters('_artifactsLocationSasToken')))]",
            "ConfigurationFunction": "[parameters('configurationFunction')]",
            "Properties": {
              "MachineName": "[parameters('vmName')]"
            }
          }
        }
      }
    ]
  }
  